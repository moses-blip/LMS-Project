generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model activitylog {
  id        Int      @id @default(autoincrement())
  userId    Int
  action    String
  timestamp DateTime @default(now())
  courseId  Int?
  user      user     @relation(fields: [userId], references: [id], map: "ActivityLog_userId_fkey")

  @@index([userId], map: "ActivityLog_userId_idx")
}

model assignment {
  id          Int          @id @default(autoincrement())
  courseId    Int
  title       String
  description String?
  dueDate     DateTime?
  maxScore    Int
  course      course       @relation(fields: [courseId], references: [id], map: "Assignment_courseId_fkey")
  submission  submission[]

  @@index([courseId], map: "Assignment_courseId_fkey")
}

model attendance {
  id        Int      @id @default(autoincrement())
  lectureId Int
  userId    Int
  attended  Boolean  @default(false)
  date      DateTime
  lecture   lecture  @relation(fields: [lectureId], references: [id], map: "Attendance_lectureId_fkey")
  user      user     @relation(fields: [userId], references: [id], map: "Attendance_userId_fkey")

  @@index([lectureId], map: "Attendance_lectureId_fkey")
  @@index([userId], map: "Attendance_userId_fkey")
}

model course {
  id          Int          @id @default(autoincrement())
  name        String
  description String?
  lecturerId  Int
  assignment  assignment[]
  user        user         @relation(fields: [lecturerId], references: [id], map: "Course_lecturerId_fkey")
  enrollment  enrollment[]
  lecture     lecture[]
  message     message[]

  @@index([lecturerId], map: "Course_lecturerId_fkey")
}

model enrollment {
  id       Int               @id @default(autoincrement())
  userId   Int
  courseId Int
  status   enrollment_status @default(ACTIVE)
  course   course            @relation(fields: [courseId], references: [id], map: "Enrollment_courseId_fkey")
  user     user              @relation(fields: [userId], references: [id], map: "Enrollment_userId_fkey")

  @@index([courseId], map: "Enrollment_courseId_fkey")
  @@index([userId], map: "Enrollment_userId_fkey")
}

model lecture {
  id         Int          @id @default(autoincrement())
  courseId   Int
  title      String
  contentURL String?
  order      Int
  attendance attendance[]
  course     course       @relation(fields: [courseId], references: [id], map: "Lecture_courseId_fkey")

  @@index([courseId], map: "Lecture_courseId_fkey")
}

model message {
  id                            String   @id
  content                       String
  createdAt                     DateTime @default(now())
  updatedAt                     DateTime
  senderId                      Int
  receiverId                    Int
  isRead                        Boolean  @default(false)
  courseId                      Int?
  course                        course?  @relation(fields: [courseId], references: [id], map: "Message_courseId_fkey")
  user_message_receiverIdTouser user     @relation("message_receiverIdTouser", fields: [receiverId], references: [id], map: "Message_receiverId_fkey")
  user_message_senderIdTouser   user     @relation("message_senderIdTouser", fields: [senderId], references: [id], map: "Message_senderId_fkey")

  @@index([courseId], map: "Message_courseId_idx")
  @@index([receiverId], map: "Message_receiverId_idx")
  @@index([senderId], map: "Message_senderId_idx")
}

model submission {
  id           Int               @id @default(autoincrement())
  assignmentId Int
  userId       Int
  submittedAt  DateTime          @default(now())
  score        Int?
  feedback     String?
  status       submission_status @default(SUBMITTED)
  assignment   assignment        @relation(fields: [assignmentId], references: [id], map: "Submission_assignmentId_fkey")
  user         user              @relation(fields: [userId], references: [id], map: "Submission_userId_fkey")

  @@index([assignmentId], map: "Submission_assignmentId_fkey")
  @@index([userId], map: "Submission_userId_fkey")
}

model user {
  id                               Int           @id @default(autoincrement())
  firstName                        String
  lastName                         String
  email                            String        @unique(map: "User_email_key")
  role                             user_role
  password                         String
  progress                         Json?
  timeSpent                        Json?
  completionPercentage             Float?
  activitylog                      activitylog[]
  attendance                       attendance[]
  course                           course[]
  enrollment                       enrollment[]
  message_message_receiverIdTouser message[]     @relation("message_receiverIdTouser")
  message_message_senderIdTouser   message[]     @relation("message_senderIdTouser")
  submission                       submission[]
}

enum enrollment_status {
  ACTIVE
  COMPLETED
}

enum user_role {
  STUDENT
  LECTURER
  ADMIN
}

enum submission_status {
  SUBMITTED
  GRADED
  LATE
}
